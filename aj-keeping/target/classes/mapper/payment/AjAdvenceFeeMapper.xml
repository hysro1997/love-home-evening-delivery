<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hysro.ajkeeping.mapper.AjAdvenceFeeMapper">

    <resultMap type="AjAdvenceFee" id="AjAdvenceFeeResult">
        <result property="id"    column="id"    />
        <result property="studentId"    column="student_id"    />
        <result property="baseCheckInId"    column="base_check_in_id"    />
        <result property="studentName"    column="student_name"    />
        <result property="advanceFee"    column="advance_fee"    />
        <result property="verifyAdvanceFee"    column="verify_advance_fee"    />
    </resultMap>

    <sql id="selectAjAdvenceFeeVo">
        select id, student_id, base_check_in_id, student_name, advance_fee, verify_advance_fee from aj_advence_fee
    </sql>

    <select id="selectAjAdvenceFeeList" parameterType="AjAdvenceFee" resultMap="AjAdvenceFeeResult">
        <include refid="selectAjAdvenceFeeVo"/>
        <where>
            <if test="studentId != null "> and student_id = #{studentId}</if>
            <if test="baseCheckInId != null "> and base_check_in_id = #{baseCheckInId}</if>
            <if test="studentName != null  and studentName != ''"> and student_name like concat('%', #{studentName}, '%')</if>
            <if test="advanceFee != null "> and advance_fee = #{advanceFee}</if>
            <if test="verifyAdvanceFee != null "> and verify_advance_fee = #{verifyAdvanceFee}</if>
        </where>
        order by id desc
    </select>

    <select id="selectAjAdvenceFeeById" parameterType="Long" resultMap="AjAdvenceFeeResult">
        <include refid="selectAjAdvenceFeeVo"/>
        where id = #{id}
    </select>

    <insert id="insertAjAdvenceFee" parameterType="AjAdvenceFee" useGeneratedKeys="true" keyProperty="id">
        insert into aj_advence_fee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentId != null">student_id,</if>
            <if test="baseCheckInId != null">base_check_in_id,</if>
            <if test="studentName != null">student_name,</if>
            <if test="advanceFee != null">advance_fee,</if>
            <if test="verifyAdvanceFee != null">verify_advance_fee,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentId != null">#{studentId},</if>
            <if test="baseCheckInId != null">#{baseCheckInId},</if>
            <if test="studentName != null">#{studentName},</if>
            <if test="advanceFee != null">#{advanceFee},</if>
            <if test="verifyAdvanceFee != null">#{verifyAdvanceFee},</if>
         </trim>
    </insert>

    <update id="updateAjAdvenceFee" parameterType="AjAdvenceFee">
        update aj_advence_fee
        <trim prefix="SET" suffixOverrides=",">
            <if test="studentId != null">student_id = #{studentId},</if>
            <if test="baseCheckInId != null">base_check_in_id = #{baseCheckInId},</if>
            <if test="studentName != null">student_name = #{studentName},</if>
            <if test="advanceFee != null">advance_fee = #{advanceFee},</if>
            <if test="verifyAdvanceFee != null">verify_advance_fee = #{verifyAdvanceFee},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAjAdvenceFeeById" parameterType="Long">
        delete from aj_advence_fee where id = #{id}
    </delete>

    <delete id="deleteAjAdvenceFeeByIds" parameterType="String">
        delete from aj_advence_fee where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
