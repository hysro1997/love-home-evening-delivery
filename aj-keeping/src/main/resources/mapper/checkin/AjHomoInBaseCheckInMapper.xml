<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hysro.ajkeeping.mapper.AjHomoInBaseCheckInMapper">

    <resultMap type="AjHomoInBaseCheckIn" id="AjHomoInBaseCheckInResult">
        <result property="id"    column="id"    />
        <result property="baseCheckInId"    column="base_check_in_id"    />
        <result property="studentId"    column="student_id"    />
        <result property="studentName"    column="student_name"    />
        <result property="teacherId"    column="teacher_id"    />
        <result property="teacherName"    column="teacher_name"    />
    </resultMap>



    <sql id="selectAjHomoInBaseCheckInVo">
        select id, base_check_in_id, student_id, student_name, teacher_id, teacher_name from aj_homo_in_base_check_in
    </sql>

    <select id="selectAjHomoInBaseCheckInList" parameterType="AjHomoInBaseCheckIn" resultMap="AjHomoInBaseCheckInResult">
        <include refid="selectAjHomoInBaseCheckInVo"/>
        <where>
            <if test="baseCheckInId != null "> and base_check_in_id = #{baseCheckInId}</if>
            <if test="studentId != null "> and student_id = #{studentId}</if>
            <if test="studentName != null  and studentName != ''"> and student_name like concat('%', #{studentName}, '%')</if>
            <if test="teacherId != null "> and teacher_id = #{teacherId}</if>
            <if test="teacherName != null  and teacherName != ''"> and teacher_name like concat('%', #{teacherName}, '%')</if>
        </where>
    </select>

    <select id="selectAjHomoInBaseCheckInById" parameterType="Long" resultMap="AjHomoInBaseCheckInResult">
        <include refid="selectAjHomoInBaseCheckInVo"/>
        where id = #{id}
    </select>

    <select id="selectAjStudentCheckInListByBaseCheckInId" parameterType="Long" resultMap="com.hysro.ajkeeping.mapper.AjStudentCheckInMapper.AjStudentCheckInResult">
        SELECT h.student_id,base_check_in_id, h.student_name AS check_in_student_name, s.student_grade AS check_in_student_grade FROM aj_homo_in_base_check_in h
        LEFT JOIN aj_student_info s
        ON h.student_id = s.student_id
        WHERE base_check_in_id = #{baseCheckInId} AND h.student_id IS NOT NULL;
    </select>

    <insert id="insertAjHomoInBaseCheckIn" parameterType="AjHomoInBaseCheckIn" useGeneratedKeys="true" keyProperty="id">
        insert into aj_homo_in_base_check_in
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="baseCheckInId != null">base_check_in_id,</if>
            <if test="studentId != null">student_id,</if>
            <if test="studentName != null">student_name,</if>
            <if test="teacherId != null">teacher_id,</if>
            <if test="teacherName != null">teacher_name,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="baseCheckInId != null">#{baseCheckInId},</if>
            <if test="studentId != null">#{studentId},</if>
            <if test="studentName != null">#{studentName},</if>
            <if test="teacherId != null">#{teacherId},</if>
            <if test="teacherName != null">#{teacherName},</if>
         </trim>
    </insert>

    <insert id="insertAjHomoInBaseCheckInStudents" parameterType="AjHomoInBaseCheckIn" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `aj_homo_in_base_check_in`(base_check_in_id,student_id,student_name)
        VALUES (#{baseCheckInId},#{studentId},(SELECT student_name FROM aj_student_info WHERE student_id = #{studentId}))
    </insert>

    <insert id="insertAjHomoInBaseCheckInTeachers" parameterType="AjHomoInBaseCheckIn" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `aj_homo_in_base_check_in`(base_check_in_id,teacher_id,teacher_name)
        VALUES (#{baseCheckInId},#{teacherId},(SELECT teacher_name FROM aj_teacher_info WHERE teacher_id = #{teacherId}))
    </insert>

    <update id="updateAjHomoInBaseCheckIn" parameterType="AjHomoInBaseCheckIn">
        update aj_homo_in_base_check_in
        <trim prefix="SET" suffixOverrides=",">
            <if test="baseCheckInId != null">base_check_in_id = #{baseCheckInId},</if>
            <if test="studentId != null">student_id = #{studentId},</if>
            <if test="studentName != null">student_name = #{studentName},</if>
            <if test="teacherId != null">teacher_id = #{teacherId},</if>
            <if test="teacherName != null">teacher_name = #{teacherName},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAjHomoInBaseCheckInById" parameterType="Long">
        delete from aj_homo_in_base_check_in where id = #{id}
    </delete>

    <delete id="deleteAjHomoInBaseCheckInByBaseCheckInId" parameterType="Long">
        delete from aj_homo_in_base_check_in where base_check_in_id = #{baseCheckInId}
    </delete>

    <delete id="deleteAjHomoInBaseCheckInByIds" parameterType="String">
        delete from aj_homo_in_base_check_in where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
